{"stage": "DEV", "message": "Added email scope to web client", "data": "<config xmlns="http://tail-f.com/ns/config/1.0">
  <environments xmlns="https://curity.se/ns/conf/base">
    <environment>
      <base-url>#{IDSVR_BASE_URL}</base-url>
      <admin-service>
        <http>
          <ssl-server-keystore>default-admin-ssl-key</ssl-server-keystore>
          <web-ui>
          </web-ui>
          <restconf>
          </restconf>
        </http>
      </admin-service>
      <services>
        <zones>
          <default-zone>
            <symmetric-key>data:text/plain;aes,v:S.amtrSG5VVVBXYjR3WnQzZw==.ozYH8GiR9Xhyr_8P9_f58g==.7xQ6n63EhGWogKjMMLx5As8MFKtlkg8g455U4KLnVBWxgCu1Di9IDU3oJ7zyWSE3y7Z8xsIt3DfrbT31mUwj1fRFzGCOWIGbkqRKK2DdmQs=.lNhxLjCRSgp2aTE_IpSeXKNtvxcG1PVvOXxnQg90SEQ=</symmetric-key>
          </default-zone>
        </zones>
        <service-role>
          <id>default</id>
          <protocol>http</protocol>
          <endpoints>authentication-service-anonymous</endpoints>
          <endpoints>authentication-service-authentication</endpoints>
          <endpoints>authentication-service-registration</endpoints>
          <endpoints>token-service-anonymous</endpoints>
          <endpoints>token-service-assisted-token</endpoints>
          <endpoints>token-service-authorize</endpoints>
          <endpoints>token-service-introspect</endpoints>
          <endpoints>token-service-revoke</endpoints>
          <endpoints>token-service-session</endpoints>
          <endpoints>token-service-token</endpoints>
          <endpoints>token-service-userinfo</endpoints>
        </service-role>
      </services>
    </environment>
  </environments>
  <profiles xmlns="https://curity.se/ns/conf/base">
    <profile>
      <id>authentication-service</id>
      <type xmlns:auth="https://curity.se/ns/conf/profile/authentication">auth:authentication-service</type>
      <settings>
        <authentication-service xmlns="https://curity.se/ns/conf/profile/authentication">
          <protocols>
            <protocol>
              <id>default-simple-protocol</id>
              <simple-api/>
            </protocol>
          </protocols>
        </authentication-service>
      </settings>
      <endpoints>
        <endpoint>
          <id>authentication-service-anonymous</id>
          <uri>/authn/anonymous</uri>
          <endpoint-kind>auth-anonymous</endpoint-kind>
        </endpoint>
        <endpoint>
          <id>authentication-service-authentication</id>
          <uri>/authn/authentication</uri>
          <endpoint-kind>auth-authentication</endpoint-kind>
        </endpoint>
        <endpoint>
          <id>authentication-service-registration</id>
          <uri>/authn/registration</uri>
          <endpoint-kind>auth-registration</endpoint-kind>
        </endpoint>
      </endpoints>
      <token-issuers>
        <default-token-issuer>
          <jwt-issuer-settings>
            <signing-key-id>default-signing-key</signing-key-id>
          </jwt-issuer-settings>
          <default-data-source>default-datasource</default-data-source>
        </default-token-issuer>
      </token-issuers>
    </profile>
    <profile>
      <id>token-service</id>
      <type xmlns:as="https://curity.se/ns/conf/profile/oauth">as:oauth-service</type>
      <settings>
        <authorization-server xmlns="https://curity.se/ns/conf/profile/oauth">
          <authentication-service>
            <authentication-profile>authentication-service</authentication-profile>
          </authentication-service>
          <client-capabilities>
            <code>
            </code>
            <implicit/>
            <resource-owner-password-credentials>
              <credential-manager>default-credential-manager</credential-manager>
            </resource-owner-password-credentials>
            <client-credentials/>
            <introspection/>
            <token-exchange/>
            <assisted-token>
            </assisted-token>
          </client-capabilities>
          <scopes>
            <scope>
              <id>address</id>
              <description>OpenId Connect address scope</description>
              <claims>address</claims>
            </scope>
            <scope>
              <id>email</id>
              <description>OpenId Connect email scope</description>
              <claims>email</claims>
              <claims>email_verified</claims>
            </scope>
            <scope>
              <id>openid</id>
              <description>Standard OpenID Connect scope</description>
            </scope>
            <scope>
              <id>phone</id>
              <description>OpenId Connect phone scope</description>
              <claims>phone_number</claims>
              <claims>phone_number_verified</claims>
            </scope>
            <scope>
              <id>profile</id>
              <description>OpenId Connect profile scope</description>
              <claims>birthdate</claims>
              <claims>family_name</claims>
              <claims>gender</claims>
              <claims>given_name</claims>
              <claims>locale</claims>
              <claims>middle_name</claims>
              <claims>name</claims>
              <claims>nickname</claims>
              <claims>picture</claims>
              <claims>preferred_username</claims>
              <claims>profile</claims>
              <claims>updated_at</claims>
              <claims>website</claims>
              <claims>zoneinfo</claims>
            </scope>
          </scopes>
          <claims>
            <claim>
              <name>address</name>
              <description>OpenID Connect address claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>birthdate</name>
              <description>OpenID Connect birthdate claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>email</name>
              <description>OpenID Connect email claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>email_verified</name>
              <description>OpenID Connect email_verified claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>family_name</name>
              <description>OpenID Connect family_name claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>gender</name>
              <description>OpenID Connect gender claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>given_name</name>
              <description>OpenID Connect given_name claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>locale</name>
              <description>OpenID Connect locale claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>middle_name</name>
              <description>OpenID Connect middle_name claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>name</name>
              <description>OpenID Connect name claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>nickname</name>
              <description>OpenID Connect nickname claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>phone_number</name>
              <description>OpenID Connect phone_number claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>phone_number_verified</name>
              <description>OpenID Connect phone_number_verified claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>picture</name>
              <description>OpenID Connect picture claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>preferred_username</name>
              <description>OpenID Connect preferred_username claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>profile</name>
              <description>OpenID Connect profile claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>updated_at</name>
              <description>OpenID Connect updated_at claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>website</name>
              <description>OpenID Connect website claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claim>
              <name>zoneinfo</name>
              <description>OpenID Connect zoneinfo claim</description>
              <value-provided-by>account-manager-claims-provider</value-provided-by>
            </claim>
            <claims-value-provider>
              <id>account-manager-claims-provider</id>
              <account-manager-claims-provider xmlns="https://curity.se/ns/ext-conf/account-manager-claims-provider">
                <account-manager>
                  <id>default-account-manager</id>
                </account-manager>
              </account-manager-claims-provider>
            </claims-value-provider>
            <claims-mappers>
              <claims-mapper>
                <id>default</id>
                <id_token>
                  <claim>address</claim>
                  <claim>birthdate</claim>
                  <claim>email</claim>
                  <claim>email_verified</claim>
                  <claim>family_name</claim>
                  <claim>gender</claim>
                  <claim>given_name</claim>
                  <claim>locale</claim>
                  <claim>middle_name</claim>
                  <claim>name</claim>
                  <claim>nickname</claim>
                  <claim>phone_number</claim>
                  <claim>phone_number_verified</claim>
                  <claim>picture</claim>
                  <claim>preferred_username</claim>
                  <claim>profile</claim>
                  <claim>updated_at</claim>
                  <claim>website</claim>
                  <claim>zoneinfo</claim>
                </id_token>
                <userinfo>
                  <claim>address</claim>
                  <claim>birthdate</claim>
                  <claim>email</claim>
                  <claim>email_verified</claim>
                  <claim>family_name</claim>
                  <claim>gender</claim>
                  <claim>given_name</claim>
                  <claim>locale</claim>
                  <claim>middle_name</claim>
                  <claim>name</claim>
                  <claim>nickname</claim>
                  <claim>phone_number</claim>
                  <claim>phone_number_verified</claim>
                  <claim>picture</claim>
                  <claim>preferred_username</claim>
                  <claim>profile</claim>
                  <claim>updated_at</claim>
                  <claim>website</claim>
                  <claim>zoneinfo</claim>
                </userinfo>
              </claims-mapper>
              <default-claims-mapper>default</default-claims-mapper>
            </claims-mappers>
          </claims>
          <openid-connect>
            <expose-metadata>
            </expose-metadata>
          </openid-connect>
          <client-store>
            <config-backed>
              <client>
                <id>web-client</id>
                <client-name>web-client</client-name>
                <secret>$5$EhCiJ4PGB6.I6kiJ$w/KDqIa8Z9dSXhtTW3XYc9IX4knFD7j7Yidl8lMdGv9</secret>
                <redirect-uris>#{WEB_BASE_URL}</redirect-uris>
                <scope>email</scope>
                <scope>openid</scope>
                <scope>profile</scope>
                <user-authentication>
                </user-authentication>
                <allowed-origins>#{WEB_BASE_URL}</allowed-origins>
                <capabilities>
                  <code>
                  </code>
                </capabilities>
                <use-pairwise-subject-identifiers>
                  <sector-identifier>web-client</sector-identifier>
                </use-pairwise-subject-identifiers>
                <validate-port-on-loopback-interfaces>true</validate-port-on-loopback-interfaces>
              </client>
            </config-backed>
          </client-store>
        </authorization-server>
      </settings>
      <endpoints>
        <endpoint>
          <id>token-service-anonymous</id>
          <uri>/oauth/v2/oauth-anonymous</uri>
          <endpoint-kind>oauth-anonymous</endpoint-kind>
        </endpoint>
        <endpoint>
          <id>token-service-assisted-token</id>
          <uri>/oauth/v2/oauth-assisted-token</uri>
          <endpoint-kind>oauth-assisted-token</endpoint-kind>
        </endpoint>
        <endpoint>
          <id>token-service-authorize</id>
          <uri>/oauth/v2/oauth-authorize</uri>
          <endpoint-kind>oauth-authorize</endpoint-kind>
        </endpoint>
        <endpoint>
          <id>token-service-introspect</id>
          <uri>/oauth/v2/oauth-introspect</uri>
          <endpoint-kind>oauth-introspect</endpoint-kind>
        </endpoint>
        <endpoint>
          <id>token-service-revoke</id>
          <uri>/oauth/v2/oauth-revoke</uri>
          <endpoint-kind>oauth-revoke</endpoint-kind>
        </endpoint>
        <endpoint>
          <id>token-service-session</id>
          <uri>/oauth/v2/oauth-session</uri>
          <endpoint-kind>oauth-session</endpoint-kind>
        </endpoint>
        <endpoint>
          <id>token-service-token</id>
          <uri>/oauth/v2/oauth-token</uri>
          <endpoint-kind>oauth-token</endpoint-kind>
        </endpoint>
        <endpoint>
          <id>token-service-userinfo</id>
          <uri>/oauth/v2/oauth-userinfo</uri>
          <endpoint-kind>oauth-userinfo</endpoint-kind>
        </endpoint>
      </endpoints>
      <token-issuers>
        <default-token-issuer>
          <jwt-issuer-settings>
            <signing-key-id>default-signing-key</signing-key-id>
          </jwt-issuer-settings>
          <default-data-source>default-datasource</default-data-source>
        </default-token-issuer>
      </token-issuers>
    </profile>
  </profiles>
  <facilities xmlns="https://curity.se/ns/conf/base">
    <data-sources>
      <data-source>
        <id>default-datasource</id>
        <jdbc xmlns="https://curity.se/ns/ext-conf/jdbc">
          <connection-string>data:text/plain;aes,v:S.Sm42Tmt1NVZ0RFlFOWxmTg==.CADCbTJcds6odsRTSalHkg==.ff4vf57JVRqY_eTuOn-LuTc1eTK5qFMq5NydTBIwlEWP6u1AYqSRvGk_pmbp1-pN9FsdOemAkR9OpLl34vqTmQAFTC0p-EpPqyLohvkBIonm8tWPEQJjwFfrO9WZfzyY.pxINCVZtPzIvg5cfC2PdYk7w57VLL09RdPG6GHbCM3M=</connection-string>
          <driver>org.hsqldb.jdbc.JDBCDriver</driver>
          <password>data:text/plain;aes,v:S.Q09sNUR2VXlzMzN1VW44Tw==.okHGLa-HS7U_mi8KEyDh9Q==.Y1Z1XSSEth6RBgqwaqEpow==.O7_yFQlOdAWds0Oe140dkMCa-6qV6gxlWowpYQMbTkM=</password>
          <username>SA</username>
        </jdbc>
      </data-source>
    </data-sources>
    <crypto>
      <ssl>
        <server-keystore>
          <id>default-admin-ssl-key</id>
          <keystore>data:application/p12;aes,v:S.MDFlUGxBNzdjUjc2ZkxwMg==.2TaA_IzrhzK48Nf1qLSmaw==.XQ6tcJzP_sI8ELxxAZQAOZ3U4BKiSW_YY81yNcMDyRe2EtAMzLri8AlVtlE6totw13J9HJ9LikCHq-sqmrow0_IQlfWiP2LNuH-V-bZ4Dd-wVIEDQw9bE9nkee1yxnetAWd6csnlBmudpVDGFsKwDOlxdbjqh4R2bBTKAYI2hFunP6ktoa9RwklgbwqwtxdFeutX67g6DEqH_uo1QBqJS99Qx9idCPbWWeteEpMB6me6fxQ_e8oS-GzFu9MYVtOUfvLfIatYeeXvTLrjzBZ6Dp3cLZ9DvnVXkBkZQ7Io_eg8j5JJIsobHlmE9WoKRX33Ncq15cQcp9A1ThkxqL0wVM56TzNMMgCpGEurvm7EZOgXuT7tTsnHljW15u_ZQKm9Jg3mewns27Dw4geVkgOPjTx9ajyi0k05YxXYZp21UBq2ixU_s8XQjjahwO3ZX9ar0iJlJdJr8lOE8IxDjxoDewehja4iMhjEfXCktEMjM0kwEHSkdBFiv2VocCG-bQdiTLyUpjd_z1muyGVG4nkMiDcWoiK2liL_-q7dq7f0nioUe92yjpGaHkO-RHumtI8w6Nr4jvd4GElV-V_BfzGCpORIBrEpb6IxQJzUavwSx3U60uOEQ8NGAyQvhq_upv0_L41PJa9wXueCjkeIAgyszjlNnJ5jJlDyK50Kuiqmno4YQ4ISD2fuDRjM1X5R1BfF6OHKr_w4Dju6DN0LmpruvdmMOe-ii0uwx4XGoAfg_0d1LDmHzGuUQqMqEE5vK4b6J85RgWWNgKL-EtGCS-yRrCvO9M3-zwi_RKNlyRX_ae5hL-atxY1kbQ2jK2RaLo0sQEEl3fPgnFFdX0OvtGMyUBj4UOfxcUbdlFPKWihC6EqfEcxH0Qu-o_yIWEu5HPo1rc4h51pIJxBq392vIuvS4wE-fijUJOqMv4rgGmrlTeKwajg0Hww5Kvr6NiKJKMI8j2t9jLpxlAVV9qEG85NIEQcgNzXoPXDyao_fNCjYmZ0SZEq1dLh3yLrD2gxlGJ4NENaeepRoWu7F6RkShY-z1aXwBajjkNA64nU7-_MWKQ-kgaObM3T--XrRzcIEd-qpuHXhMbbtXvF7Xa6LYLjY4bHu_SqRooy2Eode5fDbBRQZi7uICS309QXnvA_aqH1V1MtRcWP2lyxRfa8WeEVBTKlIFS3IPNqIwTWrs3mc6Mq13Vzy1I-wrlgTOySVbS4jm_C6qDIm95dhB3LiUAs7AYLSf_FRVreuuXoXY-OW0BT57_Aqlm9Ex0rkYWfVct-M0K8tkgtAO4QB2nP2XD4pRigx-R1MZR0vqjYJJpUHqtl8W_CZjyJ08OeKq5bXRsveLtxrakeut7367Apfjg5J7JEoqVMi-QvjTFKlgbN9M6f1lmIpdrFI1RwvxdQxaeo2HIiq-u2o9BqXDyqodtldAvpJ4X58u941-6b7NO5y3q5nepxJbpLmBAzDaeFPudRhgqSmwfQH3cePuyQoJJnZNDRkUQ8RfSrbokyYXoBC7V8zocjgW3jlU5cZE0J6_T-33ldHSCZUPRiGNi53t6hLSeL3emqe4mq62ZoY8J1mRoKkX2fOhZTp3KoGhEIpuSEYQBruvXlh8GUDBYvbXXSsUvl0qnOVLFH0nsdQBju8TNK_yhCUwW4RIGyW464obmQegx6nsdvyK7PWLcDhP4ZaoqY9oIICtv8V5LW6gWVP7BxMMdyGUny_2cAoR1ZEG0Rtf_J3NWLZEWoN6FceByQpgSLN-l2TmXB9CMSQiFOVqJONfpPueB0kBaRrLet79B_2CCgTGmVqM_EDb8c0gZlNdNtdYEpyettiHFWsfHHtK2Jc3qAB4leePzyCTbajgbQ1GwW78CFzc7yyRQ__VXo-SD5_bAt_l1rsmlxS8JktbfhAH49Eq7JD5baxYLiRFGzt7MRDykMmnKSBuNBo7-v9PDFGKMSH7nWt-bx9XG0Wb3ccIQNFoZKEud4xOn9Kt6ruaSRJHYtdjrk5hDIsY1V4dDcZWTUTO3_tkixvpcX19JVjklIxBGJ0iGkmUr1CSU3PEbY0zIdVzCgWRX6Poi2vVpSzXzwuHPjguHNgHFpv3y7Ht1C3VKvLhvxKQntyBT0eAQzVvC4UuPntIJZsdl8VQruTZoF11HCKatlhTf0XV8ENiibx2mnpfO3Lxp5nVTG2XC8UJOf3SUMSa3FvxOx5ZIOZ0k-EgSmMG6C_N3w3kPf6vpuXrnwpa8mjyI-4AN5kmBztfIXxyaBRqR9B5j_Ic3QRkkLpycEnOp4tYHL20KupP_tEgt7JcrSpMDKRPKeEU0MPcwrcdjslzx84zJY1BawR-oO2DWKz0bGyhPXWKObj68-KJ85SAVoHYw-_jam3Xh2pbSTiarcV-8ISEjD760ZQj1JR9Kq1l0_Fu68a6gcxqJvbt4ekl_tYFG71k5oyEKSC7xM1Qj5b1ZEv-3s0kZ-FosUxmPkyU_hJrekAr7v1i4d-2CKVIRarDPqLITTmQor9rwgXzBy6XmkTl8P5BFQCW_mJu2tKNPqGnqS2OpVK6OMP0dbzbFkl5pUEgqYLn5ByrisNBV0a2EKMX1sqW3UScQ4POKZoIUJJB7VAWBDqSwIoxYWV2MBZMSNKD7yjudaf4tKi6L5vgXisBgRdmo0wchhxthLSw1LVbNy-KcS7AbIUOfTay8-uEgr-rrIeBTACUbsu0Hxho1EhgPux9Kfn7dv0Fuj0K1dnl4SKTxdK2Mny7dfCzFPeC5iC29jhVlNJ0kEgn5P8wxRxr5CQ_AWAlOib33sXjHUz1SAt--h--BS7PY6lUCQZyptFru1Y48j_97xzQixWcTznMbT9UEJ8mr-zkV6tZ2y_nSwFx8ftwak0n1rpCg9V749cc5DY_IA4h5Li2VUHbCSF5YcYU7XHjivH4njgElGe346G1Os7WFkrgbfoXJG40xJV_I7m4Aa1OwV__21KxtUyqWWdRN33s7VzxUaR5fg71pUL4y3auKaSRdA92CdxIUo8_xqGqLevP7QT5rJMpTqxkwtcVWh0rW_ttYEXOUXir7_gEWnR7lR0mSpacD4SuGDu4OMtrXbWbRdr1EIJMhX1oATiJO3ZEU9ld2Kjo_phtbUJkzOc_5M0tOoohdCl_Xrs6NCtgHU9lWmTOLq0Tfjcv_lsm57atXKdWkRSZ36cB5iE6EJkjXcrCKUk3FtiBAwLGwYWt9TWjgHPlKbTxLAv2_NJKvPndXIJv6ih-CqmOJuk3R1RuqFoa2KqzekhH2A87jBEwgnAjxFkOEil2DmW-RhFLNwjoTYURyw5f7N0Gs8Po5XcFpMB_BPcvuQ_E_D2d3YzorHtYLREjC3unxHIaqB_zOmhETY9sFmzQBej3SfsKbuITJdb8HNBYSOV83xUz_UofaRXbq94tLQFNUHc12LB8JrSo_Od1RISa7abo49okrcDb1qfWqcctQCMMMXttW-1swz39D24yfbxqCilbPpKZb3t8_VmjsJAK63lDcDDVTgRrDCgLRNAkCSB6RfxdqJZt8WjphX0wWJPeScRZAScDEG_LiDpIDk4dHiOxZPRr1psGciPciJ5ayq3a9l9X5QqmhCN19Behsv2V6F7MJ0QiakD780HPF8RPt9TiJlQ-u0xBuq8OB1cuDU18GI-NqEKS_t_kFYE5hGsr0Do0hIbWHhNkPby2CDPfNgmd3zvb5M=.81noltHYnbGKXLwRm3LLcNAyORDpvRsaQ2AdjMyrWqs=</keystore>
        </server-keystore>
      </ssl>
      <signing-keys>
        <signing-key>
          <id>default-signing-key</id>
          <keystore>data:application/p12;aes,v:S.bDNyeDJ2SU1VNGtuZm1JWQ==.tJw63dzwhLOxE2gBy73tXQ==.x83svmLq_H2SYNd3AbyxKUtB7Miv5amlPo-R0zs-dcgb-IFbeKHDkVlzi2Ru3zSf9Pn4PkVpcjGjA-WpA_J08l8dMp834o98stiS5lf3jfBEl6Py3qoN74So_hkGqU6byzSw5zVfQvVmWn6o9SQrvjVmXiqvgfZuBxylIrH6JRubUChRkVoM2vFsSLYOcsRMn4mu0PRefEAkTIQDaQQksLPOLdsZSrVvniL4WBG7NYlwCxD-RtJFiuZvZxa9eSVgLLIHsNNhZJYuHuuh7rit3VaNc9dIOt-ZfIvAT8hWGkJyV2YAZkdcL5Ypd28Rwv-qBFUprnnsLTZHYdguR5kCEqZo8soLU5Et3Gx-wBqk3i2-9JucY0T-IWntmHoyVIJTeW4Wekf8duz6cHOTwHukofM3Tyqvjghus21c4vmbWd76M-8KKTjJM-s4x9j77R6Zik9NQrTduQOusJLmhXmjyg-cGi50r-IlayuR9XWsNF977cqXMh4XgB7O8eidpxxnJz8YugMZx2GYMn-WzAEp18t6a1hzCWzbG9R3KhktBGIQVwr2TZUpOOuMEJ-sUBnNqjAYz9bvsepW2F1LuoTSWzjP-JXaVRzgMkboe0nTKOu-1p5aavnHV1S4PlKgZFVbU5XhtbF4A075lxbY3PEpxjHJdAp1UPW2x5_E8ialDBNxkINkHox76A-UbnfE7eU_cPKpia1bnhtUgpyILSpe8EEhTNzYUmWqCZGTOykpZA6yWv-rXwK4TTHV51NUNZoViBmwfM3XFhB6GyI9wV2C8IEJO2OCJ0ftyRmTpmBV0AGcxEHRvbwryQ4yQvDeIlsmLiFToVSL_zWT2z2pHwERHctv40lYGRsYwBP33r6-etamVdbP3XAKFut4k2ORx3IcMKHP-eLaaBWTovQN02eoL_SD7bZUuc4md4aJ4GnsKKqrjNEi0kvYyVsjMk6CD4AJPpRXfxu4ZhFlA6cGbQxtPEwtZvhOgY_OZAow0ps_1y-VlVV7ZhDR47bkXfQ1JCjyUJKwLMCuyRpQBmNA6J3TNWI_7qsLW8AozpWj5qLVvtcfrf3EHLjWNAJZLdX2-y3i68LR1mbH1oxnlaTL1rhX0f2dbGgtM_175Xg1F7YibjT7mEApF92pc5BS2Zd_Igko81QakSY9FekSEoPQJcIUhUgAL_2dFrSME_wBz2eq5-UDC1pe44lCM8302_J5FxuxtlP8r5-O7AL2kC6Dhfl_l7VdAkiIhZ8vZrOgzBwzUBZ5ofYDVIMUHXenrqz2D6GNo01fdPyxBK9EeacVR0JkvPljDUCcTXkMn71aY_0HBq6ZkGyNGNsxkyAX14GgFe7zmWnlvK77ruLPeURZ5qPXttM6ZBramRMdI1VYJwtbKLm9A8nHKFP5_SvUKViUZ9FOkg-77zns-gT3PyCaND5s0lfS56xjxa_aLmmlr4H1VDlz0TO04gNFW56vCM2AnSHwoFrqSdstRHeT1uso_XdCSjljnedSZwflQ0TUPvgjszx383Qkiz2XaA0DQ2EEAdNJqHgRvLIoBnylPiTv0Ux0E-RVOqIwSv15GSdS00nyHeZsVNq4I228_Cu6Estic6KC9OQ8KOpqWl2gpyjjqX1GFDTa3XSWkWAsn7gp1-Qrke-wua8jLExRdyYNVAfBCmjBxBIXcv1yD8RQQypzmwqMUGTqGQEzH3CHqMG-h3-vkNmw2lRProh3z2TUqWLYf-PNpIuIbopVcp2JJr2uIpYKOcVpcXFQs4-IXVSPpVoWzHOXv3czoyzUsZEK8R4g3MftdirUMhSA7y_5JYf2gNMqERObSicdN8nfZw_dYFc1MCndQ6nsC3NjNhoLLKmfC83oOqII9J8nKrh5744R9xNki5T0sBwcKFav8Rmut1idOtb5QKdQh0ZZbeFQ2Tid7bdEBjhDD-GU0ztI8SkMyfQgO--0c9RUoDGw94O49qtSpebKhSsP36731-bwVOKj-ojpVJIatQVH4KE9g8nktNPlEYtkimsQLoMNySCK0I22_PDlgjphg1-1ySoQt_xQDu-E1NTBZr5cXnKxnlHYnNU5UnsbFS4qKfUeICAuClnFrufiJ-PRxSxQhl-DWiOSf8xdhASh8MmfhnDq3lGBfBDL1zMJ1sTzEyPr6fIPzcSJe4GWrarXFbAPZ_UXWmgngyLGrw-9_lvnS_seD4S9fimoHFgAFuPCntKRjVx_L0yps2oURYEsNLLDiOxsy18XBRlMfPZWved6VBQ7mt49lvAmOXK-OxUYVYYh2G70QBd1JX_-wY5xtIAKkc_Kl2W4U3Dp8dkhAiPUblUNhRlUKqeJKdo-3zTAl5fko4FZLv5I5TZmMPnbnojMw9iqhf5ZP4Ro1j7qOQ4PphUu2ugKBgM2JTzv0nzQsgNaiJeX88VSz9f2vu6A5sw6MT9sOHdqYSnxCMvgJRkItYv_yVFq63B6v8XYX0oC2QK7mVm7r8lRtCFWIaEIfk85-N04xN1XjYbzHb2bA_mld00dbYmL6Q2Rvirbpt7u62qmNQu_D8BArV4eM3qi7jKO3ajb18boysSX_wp2mRRaIT34mkTbfXCYwj1oeOHPUkidSg1nrk5txKnkY3IIAUcZghqLSSHhgxZ3YrInL6w2ROFQ_sB9fBexaBYXBWSteO7pxsmTlLBIzl8nqS3AlCa9MIr_PNoGg4gcrcF0xBP7iHCFyLDXPAFUYr27L4OxsjSKOiJmoz5NEdT7zTTSAefQljjZANohYizyX1qYRlSjvc2fr_G35io10Ew5ZswraXVWzYaOxuu-7v44JWdtaeEWGjiSosoSPr7GWCLlqXWEtG5QUC7dME_dZrrQ9gyut-JR6a3uqK3Rbf-dFE_d8cZTkahaTtqJ9bvDvmAsaKPxvyyngJN4MhkF9OWn6blAkfBTwCd-9tPeOBP1cktZ08zUXE4LWrnDUnw87vQvhBpKV_mjXK-ikvXhrsUwrPYwfPskGD6E6DoP7Wh2pXTAA3Kcedu5HHqk4PfL6BujT6IdF5h8FQZ4OlCkWySu8D2GCGh0653o2Fab6uCTb_eBO6zfMZdsj_j2p8gXio3wNcCrfaR_izK4uT3IbQoJjoOElq0mGkhed7OG6RQHuztxcmS2_1ub_Nr1EuDOOaYmb3CbVFNFcZ0sGaK_rB5pSPZ8YAcxBwhOskBKe0z1zmjRktCedRBVWLOa6njPSLriNzXQg87KAhLIDbg5wSKi13H3webU6Zpfzh3kkg7BF4r2j4UT-W1KKfBT0x5ETcrSjEW15m9ANECKkX3iw13ZuocrLqzlpuH1q8UMmJ_fnm4enEXYkypCKxDOjGcFlbs1u6Qc9ED-BA2rnXYluO4sAGBLNJsv5Wt7ZF8jFYZOFs1PdpQyehhzkDLgYDN1Kx9WQu6RP67EcArhzcLSkShCVQamD2Hd0-EOkcfyzXBz9jpOM-uQstnDAjws2WW95HbZ8pRkrcVidMrx0VYJ2lNZFSyOu-dDqk4yXyPzSvnrhMm5KUFfOovLfxMabXyc8pVDQHlsRyEsb21uLn5jgp3QgcWFOGsLLPJhIu446ptJ3BExDoUPtiR8nrnx-_14AyfBsWn6crku8ikjwmt0c7KDujeOF2rF3_z1IK55nT5qhDbdGSxF4X1avOFV8sWczgUQ3ngmggC7i1vTFtV-BZImSWHQkamKPdGo-mPFCrg=.pKSKIXVTNP_UwUpKEr_e8ZwsLjGMHl4AS2PxAai7Aqo=</keystore>
        </signing-key>
      </signing-keys>
      <signature-verification-keys>
        <signature-verification-key>
          <id>default-signature-verification-key</id>
          <keystore>data:application/pem;aes,v:S.SVNSM1NWUDhSUXo5SGxHOQ==.Dkm6sHEglgtn5uXGwl0iXw==.kJAslg61KMRP3jhx89zA_VR-mPUvwTI5MI6Ck3oekLoz-RX5umi0JI-GMMBnKMsjKiHNM5e2IdNZnsWYVoZJYxxcWq6q3EyhcNjo4d_vmik8phGygR_MnTI7eCDkHkdoDFizQDA73t5LrhIBVG3LCfyUKRAtW2ZuzRVJ6iaHGJLLBjje4uUuIy0-gq5D-8ox0Rr-vuKkeWC0sea3sJSLZSacsFYZ9RKqq-XaxcBPFkiNrShbbc6EjqA81HZSyWHldQd2RHP83zy8GN9OJORJhA_l73j1maf4FHYRUvejaECTaLQG-CsFxZjvO6Ooui0yoj7xdIi6sFA21rA0oc5-UwCu64j7tE3b8DWLB-C-DOQ7vthUIW8QLtQJo5XBBNfriTuEJpVhaodvhUwG78y037rkGhSNR7TWU-AoyFuGpeU_OCQXWZIoeyn19mxfHSHfMbjYC1iRvNoZxg2qFZOr41rQvWHAwBENqVBH8qeykJ9zA5c5S6y03qiPAuUIOULBHoAZLyJ1ekZcewQDCYiDZ1NBCsLtWO188U4kr8BVhVQhTZHmJexAqqk2rHX31sCszyf6VhRmJ3gLZnU6KCyHzv5Pzo-Tj20UBh1Gqnrf87tZ4cAQjAU4FEwd1d2lTaZTkGW9_4eCol246VtjcSs1Y-hQHOCkj_-_Y262Nk0nELOXLjN7UpVLHbIYZle2KOj5V37bNDZYhrDG4gaqcSJrkjtLbvyc35-JvCdvCzVcEVUNILQJD2tVa-kvrqHpEm1U7unYIop8b476GDz0S6Yalh0AGc9dRlhgcmjC7_aT_V3NrzbUHd1vEz-JPTcs6wZAq_Rd-i0Bpu1PXUXjZtOiK8NYf8qX8vGSUZtyf2ezDlFA_uqxAmj6mgYK-2sZvuPoXPGM106c9jlAc8qDjgWRNP0PEvIfFOzcOjcjv_sHVR4_SVmRqQJ42WXpxPQkXRfM1lppdPLBcU69bPD-qt_xKYpylngexa1o142d4pZSrAk6MT-XWWsGtHp5X6db2XmRnDlR9tSgt8xzZLy8JQgoPiL9eakb5VvnZb9ApW41JHgDQMRGrJWgyrCAXBqCFD9q_LWdXrt2LiKTic-q_y-OHkzsiqn7uf5MZJ1dVwZ_Ulmlc-yVG3WafArKAtOjuu4G0DpL7ZfoEm8pR9zSw2czU50kuD3gm-BNJQkq3_czXNovWolhh28G1pBjVQbazctAK26pZ6JNxFDkfvKtmpqnRoFQcnKozdTEzZ1Bc6u2sX8zNvWkUUv8lZ7FCM-NnkuV6DlobjnVrGrl2vjOIyBlEjYUtmbuAq-nCF60kDuP3b5BfUam1mDG8xzuq5MMeGxbxf5-xGlHceLxOxj0IB4QsZ2qCs5n6cI7kxwhieHJerie58tTTgN7aGwsj_5Qy1Bi6SWO_GiLqrVRpHdCjLc2bXfxYc0E62dIAbBhy6ykqloipx5FORp32xwtUT_l_CzobQxL07CWToqlbfZWg5xVF9tTC0rU4abTRU5i-psJ5zfFUw7OjzU-5UUdUrBSNqq6kqrksTp3mhRFSFqXUNdxzdE3L56HFyxFND8bhkYqw5RWqb_OS5HnNwMZY5aX219dijYm-fmHUlv-rRPh6l-mfq7lc0Fi2nGvC2N5ORv2Kba1UAMvE92SyQ_gBYzq_sXBLf3bgq-BYk0Kk9JhSN0_ZjxtxQN-8PExLCCE9VovaqIugeYckHPbPnOuu3NWLKak.xoD3h5YlvHjOq1xdJqV6wE00OUKFG6p2CG_C6TJtOTI=</keystore>
        </signature-verification-key>
      </signature-verification-keys>
    </crypto>
    <caching-services>
      <default-caching-service>
        <data-source>default-datasource</data-source>
      </default-caching-service>
    </caching-services>
  </facilities>
  <processing xmlns="https://curity.se/ns/conf/base">
    <license-key>#{LICENSE_KEY}</license-key>
    <account-managers>
      <account-manager>
        <id>default-account-manager</id>
        <enable-registration>
          <account-verification-method>no-verification</account-verification-method>
        </enable-registration>
        <account-data-source>default-datasource</account-data-source>
      </account-manager>
    </account-managers>
    <credential-managers>
      <credential-manager>
        <id>default-credential-manager</id>
        <Sha2WithSha256>
        </Sha2WithSha256>
        <data-source-backed>
          <data-source-id>default-datasource</data-source-id>
        </data-source-backed>
      </credential-manager>
    </credential-managers>
  </processing>
  <nacm xmlns="urn:ietf:params:xml:ns:yang:ietf-netconf-acm">
    <write-default>permit</write-default>
    <groups>
      <group>
        <name>admin</name>
        <user-name>admin</user-name>
      </group>
    </groups>
    <rule-list>
      <name>admin</name>
      <group>admin</group>
      <rule>
        <name>any-access</name>
        <action>permit</action>
      </rule>
    </rule-list>
    <rule-list>
      <name>any-group</name>
      <group>*</group>
      <rule>
        <name>tailf-aaa-authentication</name>
        <module-name>tailf-aaa</module-name>
        <path>/aaa/authentication/users/user[name='$USER']</path>
        <access-operations>read update</access-operations>
        <action>permit</action>
      </rule>
      <rule>
        <name>tailf-aaa-user</name>
        <module-name>tailf-aaa</module-name>
        <path>/user[name='$USER']</path>
        <access-operations>create read update delete</access-operations>
        <action>permit</action>
      </rule>
      <rule>
        <name>tailf-webui-user</name>
        <module-name>tailf-webui</module-name>
        <path>/webui/data-stores/user-profile[username='$USER']</path>
        <access-operations>create read update delete</access-operations>
        <action>permit</action>
      </rule>
    </rule-list>
  </nacm>
  <aaa xmlns="http://tail-f.com/ns/aaa/1.1">
    <authentication>
      <users>
        <user>
          <name>admin</name>
          <uid>0</uid>
          <gid>0</gid>
          <password>$5$DMVAMHMM$ldN9MoPchBJG6md5xV9Ym7eEZCheQIMDjvGrskl0095</password>
          <ssh_keydir>/opt/idsvr/home/admin/.ssh</ssh_keydir>
          <homedir>/opt/idsvr/home/admin</homedir>
        </user>
      </users>
    </authentication>
    <ios>
      <level>
        <nr>0</nr>
        <prompt>\h&gt; </prompt>
      </level>
      <level>
        <nr>15</nr>
        <prompt>\h# </prompt>
      </level>
      <privilege>
        <mode>exec</mode>
        <level>
          <nr>0</nr>
          <command>
            <name>action</name>
          </command>
          <command>
            <name>autowizard</name>
          </command>
          <command>
            <name>enable</name>
          </command>
          <command>
            <name>exit</name>
          </command>
          <command>
            <name>help</name>
          </command>
          <command>
            <name>startup</name>
          </command>
        </level>
        <level>
          <nr>15</nr>
          <command>
            <name>configure</name>
          </command>
        </level>
      </privilege>
    </ios>
  </aaa>
</config>
"}
